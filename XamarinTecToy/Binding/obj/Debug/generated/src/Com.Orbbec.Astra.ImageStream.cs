//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Orbbec.Astra {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']"
	[global::Android.Runtime.Register ("com/orbbec/astra/ImageStream", DoNotGenerateAcw=true)]
	public abstract partial class ImageStream : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/orbbec/astra/ImageStream", typeof (ImageStream));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ImageStream (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/constructor[@name='ImageStream' and count(parameter)=1 and parameter[1][@type='long']]"
		[Register (".ctor", "(J)V", "")]
		public unsafe ImageStream (long p0) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(J)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (p0);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_getAvailableModes;
#pragma warning disable 0169
		static Delegate GetGetAvailableModesHandler ()
		{
			if (cb_getAvailableModes == null)
				cb_getAvailableModes = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetAvailableModes));
			return cb_getAvailableModes;
		}

		static IntPtr n_GetAvailableModes (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.AvailableModes);
		}
#pragma warning restore 0169

		public virtual unsafe global::Java.Lang.IIterable AvailableModes {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getAvailableModes' and count(parameter)=0]"
			[Register ("getAvailableModes", "()Ljava/lang/Iterable;", "GetGetAvailableModesHandler")]
			get {
				const string __id = "getAvailableModes.()Ljava/lang/Iterable;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Java.Lang.IIterable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getHorizontalFieldOfView;
#pragma warning disable 0169
		static Delegate GetGetHorizontalFieldOfViewHandler ()
		{
			if (cb_getHorizontalFieldOfView == null)
				cb_getHorizontalFieldOfView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetHorizontalFieldOfView));
			return cb_getHorizontalFieldOfView;
		}

		static float n_GetHorizontalFieldOfView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HorizontalFieldOfView;
		}
#pragma warning restore 0169

		public virtual unsafe float HorizontalFieldOfView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getHorizontalFieldOfView' and count(parameter)=0]"
			[Register ("getHorizontalFieldOfView", "()F", "GetGetHorizontalFieldOfViewHandler")]
			get {
				const string __id = "getHorizontalFieldOfView.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getIsAvailable;
#pragma warning disable 0169
		static Delegate GetGetIsAvailableHandler ()
		{
			if (cb_getIsAvailable == null)
				cb_getIsAvailable = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_GetIsAvailable));
			return cb_getIsAvailable;
		}

		static bool n_GetIsAvailable (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.IsAvailable;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsAvailable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getIsAvailable' and count(parameter)=0]"
			[Register ("getIsAvailable", "()Z", "GetGetIsAvailableHandler")]
			get {
				const string __id = "getIsAvailable.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getMirroring;
#pragma warning disable 0169
		static Delegate GetGetMirroringHandler ()
		{
			if (cb_getMirroring == null)
				cb_getMirroring = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_GetMirroring));
			return cb_getMirroring;
		}

		static bool n_GetMirroring (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Mirroring;
		}
#pragma warning restore 0169

		static Delegate cb_setMirroring_Z;
#pragma warning disable 0169
		static Delegate GetSetMirroring_ZHandler ()
		{
			if (cb_setMirroring_Z == null)
				cb_setMirroring_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetMirroring_Z));
			return cb_setMirroring_Z;
		}

		static void n_SetMirroring_Z (IntPtr jnienv, IntPtr native__this, bool p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Mirroring = p0;
		}
#pragma warning restore 0169

		public virtual unsafe bool Mirroring {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getMirroring' and count(parameter)=0]"
			[Register ("getMirroring", "()Z", "GetGetMirroringHandler")]
			get {
				const string __id = "getMirroring.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='setMirroring' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setMirroring", "(Z)V", "GetSetMirroring_ZHandler")]
			set {
				const string __id = "setMirroring.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate cb_getMode;
#pragma warning disable 0169
		static Delegate GetGetModeHandler ()
		{
			if (cb_getMode == null)
				cb_getMode = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetMode));
			return cb_getMode;
		}

		static IntPtr n_GetMode (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.Mode);
		}
#pragma warning restore 0169

		static Delegate cb_setMode_Lcom_orbbec_astra_ImageStreamMode_;
#pragma warning disable 0169
		static Delegate GetSetMode_Lcom_orbbec_astra_ImageStreamMode_Handler ()
		{
			if (cb_setMode_Lcom_orbbec_astra_ImageStreamMode_ == null)
				cb_setMode_Lcom_orbbec_astra_ImageStreamMode_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetMode_Lcom_orbbec_astra_ImageStreamMode_));
			return cb_setMode_Lcom_orbbec_astra_ImageStreamMode_;
		}

		static void n_SetMode_Lcom_orbbec_astra_ImageStreamMode_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStreamMode> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.Mode = p0;
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Orbbec.Astra.ImageStreamMode Mode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getMode' and count(parameter)=0]"
			[Register ("getMode", "()Lcom/orbbec/astra/ImageStreamMode;", "GetGetModeHandler")]
			get {
				const string __id = "getMode.()Lcom/orbbec/astra/ImageStreamMode;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStreamMode> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='setMode' and count(parameter)=1 and parameter[1][@type='com.orbbec.astra.ImageStreamMode']]"
			[Register ("setMode", "(Lcom/orbbec/astra/ImageStreamMode;)V", "GetSetMode_Lcom_orbbec_astra_ImageStreamMode_Handler")]
			set {
				const string __id = "setMode.(Lcom/orbbec/astra/ImageStreamMode;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (value);
				}
			}
		}

		static Delegate cb_getSubtype;
#pragma warning disable 0169
		static Delegate GetGetSubtypeHandler ()
		{
			if (cb_getSubtype == null)
				cb_getSubtype = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetSubtype));
			return cb_getSubtype;
		}

		static int n_GetSubtype (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.Subtype;
		}
#pragma warning restore 0169

		public virtual unsafe int Subtype {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getSubtype' and count(parameter)=0]"
			[Register ("getSubtype", "()I", "GetGetSubtypeHandler")]
			get {
				const string __id = "getSubtype.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_getType;
#pragma warning disable 0169
		static Delegate GetGetTypeHandler ()
		{
			if (cb_getType == null)
				cb_getType = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetType));
			return cb_getType;
		}

		static IntPtr n_GetType (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.Type);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Orbbec.Astra.StreamType Type {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getType' and count(parameter)=0]"
			[Register ("getType", "()Lcom/orbbec/astra/StreamType;", "GetGetTypeHandler")]
			get {
				const string __id = "getType.()Lcom/orbbec/astra/StreamType;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamType> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getTypeCode;
#pragma warning disable 0169
		static Delegate GetGetTypeCodeHandler ()
		{
			if (cb_getTypeCode == null)
				cb_getTypeCode = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_GetTypeCode));
			return cb_getTypeCode;
		}

		static int n_GetTypeCode (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.TypeCode;
		}
#pragma warning restore 0169

		public abstract int TypeCode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getTypeCode' and count(parameter)=0]"
			[Register ("getTypeCode", "()I", "GetGetTypeCodeHandler")]
			get; 
		}

		static Delegate cb_getUsbDeviceInfo;
#pragma warning disable 0169
		static Delegate GetGetUsbDeviceInfoHandler ()
		{
			if (cb_getUsbDeviceInfo == null)
				cb_getUsbDeviceInfo = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetUsbDeviceInfo));
			return cb_getUsbDeviceInfo;
		}

		static IntPtr n_GetUsbDeviceInfo (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.UsbDeviceInfo);
		}
#pragma warning restore 0169

		public virtual unsafe global::Com.Orbbec.Astra.UsbDeviceInfo UsbDeviceInfo {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getUsbDeviceInfo' and count(parameter)=0]"
			[Register ("getUsbDeviceInfo", "()Lcom/orbbec/astra/UsbDeviceInfo;", "GetGetUsbDeviceInfoHandler")]
			get {
				const string __id = "getUsbDeviceInfo.()Lcom/orbbec/astra/UsbDeviceInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.UsbDeviceInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate cb_getVerticalFieldOfView;
#pragma warning disable 0169
		static Delegate GetGetVerticalFieldOfViewHandler ()
		{
			if (cb_getVerticalFieldOfView == null)
				cb_getVerticalFieldOfView = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_F (n_GetVerticalFieldOfView));
			return cb_getVerticalFieldOfView;
		}

		static float n_GetVerticalFieldOfView (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.VerticalFieldOfView;
		}
#pragma warning restore 0169

		public virtual unsafe float VerticalFieldOfView {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getVerticalFieldOfView' and count(parameter)=0]"
			[Register ("getVerticalFieldOfView", "()F", "GetGetVerticalFieldOfViewHandler")]
			get {
				const string __id = "getVerticalFieldOfView.()F";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualSingleMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_start;
#pragma warning disable 0169
		static Delegate GetStartHandler ()
		{
			if (cb_start == null)
				cb_start = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Start));
			return cb_start;
		}

		static void n_Start (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Start ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='start' and count(parameter)=0]"
		[Register ("start", "()V", "GetStartHandler")]
		public virtual unsafe void Start ()
		{
			const string __id = "start.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_stop;
#pragma warning disable 0169
		static Delegate GetStopHandler ()
		{
			if (cb_stop == null)
				cb_stop = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Stop));
			return cb_stop;
		}

		static void n_Stop (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ImageStream> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Stop ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='stop' and count(parameter)=0]"
		[Register ("stop", "()V", "GetStopHandler")]
		public virtual unsafe void Stop ()
		{
			const string __id = "stop.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='DataStream']/method[@name='getFrameHandle' and count(parameter)=3 and parameter[1][@type='com.orbbec.astra.ReaderFrame'] and parameter[2][@type='int'] and parameter[3][@type='int']]"
		[Register ("getFrameHandle", "(Lcom/orbbec/astra/ReaderFrame;II)J", "")]
		public static unsafe long GetFrameHandle (global::Com.Orbbec.Astra.ReaderFrame p0, int p1, int p2)
		{
			const string __id = "getFrameHandle.(Lcom/orbbec/astra/ReaderFrame;II)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JniArgumentValue (p1);
				__args [2] = new JniArgumentValue (p2);
				var __rm = _members.StaticMethods.InvokeInt64Method (__id, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

	}

	[global::Android.Runtime.Register ("com/orbbec/astra/ImageStream", DoNotGenerateAcw=true)]
	internal partial class ImageStreamInvoker : ImageStream {
		public ImageStreamInvoker (IntPtr handle, JniHandleOwnership transfer) : base (handle, transfer)
		{
		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/orbbec/astra/ImageStream", typeof (ImageStreamInvoker));

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		public override unsafe int TypeCode {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='ImageStream']/method[@name='getTypeCode' and count(parameter)=0]"
			[Register ("getTypeCode", "()I", "GetGetTypeCodeHandler")]
			get {
				const string __id = "getTypeCode.()I";
				try {
					var __rm = _members.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

	}
}
