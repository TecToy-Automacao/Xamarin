//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Orbbec.Astra {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']"
	[global::Android.Runtime.Register ("com/orbbec/astra/StreamReader", DoNotGenerateAcw=true)]
	public partial class StreamReader : global::Java.Lang.Object {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.orbbec.astra']/interface[@name='StreamReader.FrameListener']"
		[Register ("com/orbbec/astra/StreamReader$FrameListener", "", "Com.Orbbec.Astra.StreamReader/IFrameListenerInvoker")]
		public partial interface IFrameListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/interface[@name='StreamReader.FrameListener']/method[@name='onFrameReady' and count(parameter)=2 and parameter[1][@type='com.orbbec.astra.StreamReader'] and parameter[2][@type='com.orbbec.astra.ReaderFrame']]"
			[Register ("onFrameReady", "(Lcom/orbbec/astra/StreamReader;Lcom/orbbec/astra/ReaderFrame;)V", "GetOnFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_Handler:Com.Orbbec.Astra.StreamReader/IFrameListenerInvoker, Binding")]
			void OnFrameReady (global::Com.Orbbec.Astra.StreamReader p0, global::Com.Orbbec.Astra.ReaderFrame p1);

		}

		[global::Android.Runtime.Register ("com/orbbec/astra/StreamReader$FrameListener", DoNotGenerateAcw=true)]
		internal partial class IFrameListenerInvoker : global::Java.Lang.Object, IFrameListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/orbbec/astra/StreamReader$FrameListener", typeof (IFrameListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IFrameListener GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IFrameListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.orbbec.astra.StreamReader.FrameListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IFrameListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate cb_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_;
#pragma warning disable 0169
			static Delegate GetOnFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_Handler ()
			{
				if (cb_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_ == null)
					cb_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_OnFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_));
				return cb_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_;
			}

			static void n_OnFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader.IFrameListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ReaderFrame> (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.OnFrameReady (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_;
			public unsafe void OnFrameReady (global::Com.Orbbec.Astra.StreamReader p0, global::Com.Orbbec.Astra.ReaderFrame p1)
			{
				if (id_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_ == IntPtr.Zero)
					id_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_ = JNIEnv.GetMethodID (class_ref, "onFrameReady", "(Lcom/orbbec/astra/StreamReader;Lcom/orbbec/astra/ReaderFrame;)V");
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onFrameReady_Lcom_orbbec_astra_StreamReader_Lcom_orbbec_astra_ReaderFrame_, __args);
			}

		}

		// event args for com.orbbec.astra.StreamReader.FrameListener.onFrameReady
		public partial class FrameEventArgs : global::System.EventArgs {
			public FrameEventArgs (global::Com.Orbbec.Astra.StreamReader p0, global::Com.Orbbec.Astra.ReaderFrame p1)
			{
				this.p0 = p0;
				this.p1 = p1;
			}

			global::Com.Orbbec.Astra.StreamReader p0;

			public global::Com.Orbbec.Astra.StreamReader P0 {
				get { return p0; }
			}

			global::Com.Orbbec.Astra.ReaderFrame p1;

			public global::Com.Orbbec.Astra.ReaderFrame P1 {
				get { return p1; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/orbbec/astra/StreamReader_FrameListenerImplementor")]
		internal sealed partial class IFrameListenerImplementor : global::Java.Lang.Object, IFrameListener {

			object sender;

			public IFrameListenerImplementor (object sender) : base (global::Android.Runtime.JNIEnv.StartCreateInstance ("mono/com/orbbec/astra/StreamReader_FrameListenerImplementor", "()V"), JniHandleOwnership.TransferLocalRef)
			{
				global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<FrameEventArgs> Handler;
			#pragma warning restore 0649

			public void OnFrameReady (global::Com.Orbbec.Astra.StreamReader p0, global::Com.Orbbec.Astra.ReaderFrame p1)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new FrameEventArgs (p0, p1));
			}

			internal static bool __IsEmpty (IFrameListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/orbbec/astra/StreamReader", typeof (StreamReader));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected StreamReader (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/constructor[@name='StreamReader' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register (".ctor", "(JJ)V", "")]
		public unsafe StreamReader (long p0, long p1) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(JJ)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
			}
		}

		static Delegate cb_hasNewFrame;
#pragma warning disable 0169
		static Delegate GetHasNewFrameHandler ()
		{
			if (cb_hasNewFrame == null)
				cb_hasNewFrame = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_HasNewFrame));
			return cb_hasNewFrame;
		}

		static bool n_HasNewFrame (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.HasNewFrame;
		}
#pragma warning restore 0169

		public virtual unsafe bool HasNewFrame {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='hasNewFrame' and count(parameter)=0]"
			[Register ("hasNewFrame", "()Z", "GetHasNewFrameHandler")]
			get {
				const string __id = "hasNewFrame.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate cb_addFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_;
#pragma warning disable 0169
		static Delegate GetAddFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_Handler ()
		{
			if (cb_addFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ == null)
				cb_addFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_AddFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_));
			return cb_addFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_;
		}

		static void n_AddFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = (global::Com.Orbbec.Astra.StreamReader.IFrameListener)global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader.IFrameListener> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.AddFrameListener (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='addFrameListener' and count(parameter)=1 and parameter[1][@type='com.orbbec.astra.StreamReader.FrameListener']]"
		[Register ("addFrameListener", "(Lcom/orbbec/astra/StreamReader$FrameListener;)V", "GetAddFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_Handler")]
		public virtual unsafe void AddFrameListener (global::Com.Orbbec.Astra.StreamReader.IFrameListener p0)
		{
			const string __id = "addFrameListener.(Lcom/orbbec/astra/StreamReader$FrameListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		static Delegate cb_destroy;
#pragma warning disable 0169
		static Delegate GetDestroyHandler ()
		{
			if (cb_destroy == null)
				cb_destroy = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Destroy));
			return cb_destroy;
		}

		static void n_Destroy (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Destroy ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='destroy' and count(parameter)=0]"
		[Register ("destroy", "()V", "GetDestroyHandler")]
		public virtual unsafe void Destroy ()
		{
			const string __id = "destroy.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_finalize;
#pragma warning disable 0169
		static Delegate GetFinalizeHandler ()
		{
			if (cb_finalize == null)
				cb_finalize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Finalize));
			return cb_finalize;
		}

		static void n_Finalize (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			__this.Finalize ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='finalize' and count(parameter)=0]"
		[Register ("finalize", "()V", "GetFinalizeHandler")]
		public virtual unsafe void Finalize ()
		{
			const string __id = "finalize.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_getStreamHandle_II;
#pragma warning disable 0169
		static Delegate GetGetStreamHandle_IIHandler ()
		{
			if (cb_getStreamHandle_II == null)
				cb_getStreamHandle_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_J (n_GetStreamHandle_II));
			return cb_getStreamHandle_II;
		}

		static long n_GetStreamHandle_II (IntPtr jnienv, IntPtr native__this, int p0, int p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return __this.GetStreamHandle (p0, p1);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='getStreamHandle' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("getStreamHandle", "(II)J", "GetGetStreamHandle_IIHandler")]
		public virtual unsafe long GetStreamHandle (int p0, int p1)
		{
			const string __id = "getStreamHandle.(II)J";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt64Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='onFrameReady' and count(parameter)=2 and parameter[1][@type='long'] and parameter[2][@type='long']]"
		[Register ("onFrameReady", "(JJ)V", "")]
		public static unsafe void OnFrameReady (long p0, long p1)
		{
			const string __id = "onFrameReady.(JJ)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (p0);
				__args [1] = new JniArgumentValue (p1);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}

		static Delegate cb_openFrame;
#pragma warning disable 0169
		static Delegate GetOpenFrameHandler ()
		{
			if (cb_openFrame == null)
				cb_openFrame = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_OpenFrame));
			return cb_openFrame;
		}

		static IntPtr n_OpenFrame (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			return JNIEnv.ToLocalJniHandle (__this.OpenFrame ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='openFrame' and count(parameter)=0]"
		[Register ("openFrame", "()Lcom/orbbec/astra/ReaderFrame;", "GetOpenFrameHandler")]
		public virtual unsafe global::Com.Orbbec.Astra.ReaderFrame OpenFrame ()
		{
			const string __id = "openFrame.()Lcom/orbbec/astra/ReaderFrame;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.ReaderFrame> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate cb_removeFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_;
#pragma warning disable 0169
		static Delegate GetRemoveFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_Handler ()
		{
			if (cb_removeFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ == null)
				cb_removeFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_RemoveFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_));
			return cb_removeFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_;
		}

		static void n_RemoveFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = (global::Com.Orbbec.Astra.StreamReader.IFrameListener)global::Java.Lang.Object.GetObject<global::Com.Orbbec.Astra.StreamReader.IFrameListener> (native_p0, JniHandleOwnership.DoNotTransfer);
			__this.RemoveFrameListener (p0);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.orbbec.astra']/class[@name='StreamReader']/method[@name='removeFrameListener' and count(parameter)=1 and parameter[1][@type='com.orbbec.astra.StreamReader.FrameListener']]"
		[Register ("removeFrameListener", "(Lcom/orbbec/astra/StreamReader$FrameListener;)V", "GetRemoveFrameListener_Lcom_orbbec_astra_StreamReader_FrameListener_Handler")]
		public virtual unsafe void RemoveFrameListener (global::Com.Orbbec.Astra.StreamReader.IFrameListener p0)
		{
			const string __id = "removeFrameListener.(Lcom/orbbec/astra/StreamReader$FrameListener;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

		#region "Event implementation for Com.Orbbec.Astra.StreamReader.IFrameListener"

		public event EventHandler<global::Com.Orbbec.Astra.StreamReader.FrameEventArgs> Frame {
			add {
				global::Java.Interop.EventHelper.AddEventHandler<global::Com.Orbbec.Astra.StreamReader.IFrameListener, global::Com.Orbbec.Astra.StreamReader.IFrameListenerImplementor>(
				ref weak_implementor_AddFrameListener,
				__CreateIFrameListenerImplementor,
				AddFrameListener,
				__h => __h.Handler += value);
			}
			remove {
				global::Java.Interop.EventHelper.RemoveEventHandler<global::Com.Orbbec.Astra.StreamReader.IFrameListener, global::Com.Orbbec.Astra.StreamReader.IFrameListenerImplementor>(
				ref weak_implementor_AddFrameListener,
				global::Com.Orbbec.Astra.StreamReader.IFrameListenerImplementor.__IsEmpty,
				__v => RemoveFrameListener (__v),
				__h => __h.Handler -= value);
			}
		}

		WeakReference weak_implementor_AddFrameListener;

		global::Com.Orbbec.Astra.StreamReader.IFrameListenerImplementor __CreateIFrameListenerImplementor ()
		{
			return new global::Com.Orbbec.Astra.StreamReader.IFrameListenerImplementor (this);
		}

		#endregion

	}
}
