//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace BR.Com.Daruma.Framework.Mobile.Gne {

	// Metadata.xml XPath class reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']"
	[global::Android.Runtime.Register ("br/com/daruma/framework/mobile/gne/BMP", DoNotGenerateAcw=true)]
	public partial class BMP : global::BR.Com.Daruma.Framework.Mobile.Gne.Utils {
		static readonly JniPeerMembers _members = new XAPeerMembers ("br/com/daruma/framework/mobile/gne/BMP", typeof (BMP));

		internal static new IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected BMP (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']/constructor[@name='BMP' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe BMP () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate cb_buildPOSCommand_arrayBarrayB;
#pragma warning disable 0169
		static Delegate GetBuildPOSCommand_arrayBarrayBHandler ()
		{
			if (cb_buildPOSCommand_arrayBarrayB == null)
				cb_buildPOSCommand_arrayBarrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_BuildPOSCommand_arrayBarrayB));
			return cb_buildPOSCommand_arrayBarrayB;
		}

		static IntPtr n_BuildPOSCommand_arrayBarrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::BR.Com.Daruma.Framework.Mobile.Gne.BMP> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = (byte[]) JNIEnv.GetArray (native_p0, JniHandleOwnership.DoNotTransfer, typeof (byte));
			var p1 = (byte[]) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			IntPtr __ret = JNIEnv.NewArray (__this.BuildPOSCommand (p0, p1));
			if (p0 != null)
				JNIEnv.CopyArray (p0, native_p0);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']/method[@name='buildPOSCommand' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='byte...']]"
		[Register ("buildPOSCommand", "([B[B)[B", "GetBuildPOSCommand_arrayBarrayBHandler")]
		public virtual unsafe byte[] BuildPOSCommand (byte[] p0, params byte[] p1)
		{
			const string __id = "buildPOSCommand.([B[B)[B";
			IntPtr native_p0 = JNIEnv.NewArray (p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (byte[]) JNIEnv.GetArray (__rm.Handle, JniHandleOwnership.TransferLocalRef, typeof (byte));
			} finally {
				if (p0 != null) {
					JNIEnv.CopyArray (native_p0, p0);
					JNIEnv.DeleteLocalRef (native_p0);
				}
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p0);
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_fnCarregarLogoBMP_Ljava_lang_String_arrayB;
#pragma warning disable 0169
		static Delegate GetFnCarregarLogoBMP_Ljava_lang_String_arrayBHandler ()
		{
			if (cb_fnCarregarLogoBMP_Ljava_lang_String_arrayB == null)
				cb_fnCarregarLogoBMP_Ljava_lang_String_arrayB = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_I (n_FnCarregarLogoBMP_Ljava_lang_String_arrayB));
			return cb_fnCarregarLogoBMP_Ljava_lang_String_arrayB;
		}

		static int n_FnCarregarLogoBMP_Ljava_lang_String_arrayB (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
		{
			var __this = global::Java.Lang.Object.GetObject<global::BR.Com.Daruma.Framework.Mobile.Gne.BMP> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			var p1 = (byte[]) JNIEnv.GetArray (native_p1, JniHandleOwnership.DoNotTransfer, typeof (byte));
			int __ret = __this.FnCarregarLogoBMP (p0, p1);
			if (p1 != null)
				JNIEnv.CopyArray (p1, native_p1);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']/method[@name='fnCarregarLogoBMP' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='byte[]']]"
		[Register ("fnCarregarLogoBMP", "(Ljava/lang/String;[B)I", "GetFnCarregarLogoBMP_Ljava_lang_String_arrayBHandler")]
		public virtual unsafe int FnCarregarLogoBMP (string p0, byte[] p1)
		{
			const string __id = "fnCarregarLogoBMP.(Ljava/lang/String;[B)I";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			IntPtr native_p1 = JNIEnv.NewArray (p1);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_p0);
				__args [1] = new JniArgumentValue (native_p1);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
				if (p1 != null) {
					JNIEnv.CopyArray (native_p1, p1);
					JNIEnv.DeleteLocalRef (native_p1);
				}
				global::System.GC.KeepAlive (p1);
			}
		}

		static Delegate cb_fnGerarQrcodeBMP_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetFnGerarQrcodeBMP_Ljava_lang_String_Handler ()
		{
			if (cb_fnGerarQrcodeBMP_Ljava_lang_String_ == null)
				cb_fnGerarQrcodeBMP_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_FnGerarQrcodeBMP_Ljava_lang_String_));
			return cb_fnGerarQrcodeBMP_Ljava_lang_String_;
		}

		static IntPtr n_FnGerarQrcodeBMP_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::BR.Com.Daruma.Framework.Mobile.Gne.BMP> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.FnGerarQrcodeBMP (p0));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']/method[@name='fnGerarQrcodeBMP' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("fnGerarQrcodeBMP", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "GetFnGerarQrcodeBMP_Ljava_lang_String_Handler")]
		public virtual unsafe global::Android.Graphics.Bitmap FnGerarQrcodeBMP (string p0)
		{
			const string __id = "fnGerarQrcodeBMP.(Ljava/lang/String;)Landroid/graphics/Bitmap;";
			IntPtr native_p0 = JNIEnv.NewString ((string)p0);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_p0);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Bitmap> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_p0);
			}
		}

		static Delegate cb_getBitsImageData_Landroid_graphics_Bitmap_;
#pragma warning disable 0169
		static Delegate GetGetBitsImageData_Landroid_graphics_Bitmap_Handler ()
		{
			if (cb_getBitsImageData_Landroid_graphics_Bitmap_ == null)
				cb_getBitsImageData_Landroid_graphics_Bitmap_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_GetBitsImageData_Landroid_graphics_Bitmap_));
			return cb_getBitsImageData_Landroid_graphics_Bitmap_;
		}

		static IntPtr n_GetBitsImageData_Landroid_graphics_Bitmap_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
		{
			var __this = global::Java.Lang.Object.GetObject<global::BR.Com.Daruma.Framework.Mobile.Gne.BMP> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
			var p0 = global::Java.Lang.Object.GetObject<global::Android.Graphics.Bitmap> (native_p0, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.GetBitsImageData (p0));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='br.com.daruma.framework.mobile.gne']/class[@name='BMP']/method[@name='getBitsImageData' and count(parameter)=1 and parameter[1][@type='android.graphics.Bitmap']]"
		[Register ("getBitsImageData", "(Landroid/graphics/Bitmap;)Ljava/util/BitSet;", "GetGetBitsImageData_Landroid_graphics_Bitmap_Handler")]
		public virtual unsafe global::Java.Util.BitSet GetBitsImageData (global::Android.Graphics.Bitmap p0)
		{
			const string __id = "getBitsImageData.(Landroid/graphics/Bitmap;)Ljava/util/BitSet;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Java.Util.BitSet> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (p0);
			}
		}

	}
}
